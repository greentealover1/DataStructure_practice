#include <iostream>
#include <string>
#include <cstdlib>
#include <sstream>
#define _CRT_SECURE_NO_WARNINGS

using namespace std;
const int MAX_STACK_SIZE = 20;
inline void error(string message) {
	cout << message << endl;
	exit(1);
}
class Postfix {
private:
	int top;//요소 개수
	double data[MAX_STACK_SIZE];//스택 요소의 배열
	int stackmax;//스택 항목 개수가 최대일때의 항목 수
	int count;//스택 항목 최대 개수일때의 횟수
	int thirdoperand;//3번째로 수행되는 연산자 개수
	int thirdtop;//3번째로 수행되는 연산 처리하기 직전 스택의 top값(개수)
	double thirdstack[MAX_STACK_SIZE];//3번째 연산을 처리하기 직전 스택의 상태
public:
	Postfix() {
		top = -1;
		stackmax = 0;
		count = 1;
		thirdoperand = 0;
		thirdtop = 0;
	}
	bool isempty() { return top == -1; }
	bool isfull() { return top == MAX_STACK_SIZE - 1; }
	void push(double e) {
		data[++top] = e;//맨 위 항목 삽입
		if (isfull()) error("스택 포화에러");//꽉차면 에러 발생
		if (top + 1 > stackmax) {//스택 요소 개수가 stackmax보다 크면
			stackmax = top + 1;//stackmax에 스택 요소 값을 넣기
			count = 1;
		}
		else if (top + 1 == stackmax) { //스택 요소 개수==stackmax이면
			count++;//스택 요소 개수가 최대일때 횟수 늘리기
		}

	}
	double pop() {
		if (isempty()) error("스택 공백에러");
		return data[top--];
	}
	double peek() {
		if (isempty()) error("스택 공백에러");
		return data[top];
	}
	void show() {
		cout << stackmax << endl;
		cout << count << endl;
		cout << "--------" << endl;
		if (thirdoperand >= 3) {
			for (int i = 0; i <= thirdtop; i++) {
				cout << thirdstack[i] << endl;
			}
		}
		cout << "--------" << endl;
		cout << data[0] << endl;//스택에 마지막으로 남아있는 값이 결과
	}
	void calculation(string operand) {
		if (++thirdoperand == 3)  {
			for (int i = 0; i <= top; i++)  {
				thirdstack[i] = data[top - i];//3번째 연산 직전 상태 스택에 스택 요소[top-i]대입
			}
			thirdtop = top;
		}
		double val2 = pop();
		double val1= pop();
		if (operand == "+")
			push(val1 + val2);
		else if (operand == "-")
			push(val1 - val2);
		else if (operand == "*")
			push(val1 * val2);
		else if (operand == "/")
			push(val1 / val2);
		else 
			error("이상한 연산자 대입한 에러 발생");
	}
};
int main() {
  cout << "수식 입력(postfix)=";
	Postfix post;
	string s = "";
	getline(cin, s);

	stringstream ss(s);//문자열 기준 공백 나누기해서 post객체의 스택에 대해 calculation 또는 push한다.
	ss.str(s);
	string r;
	while (ss >> r) {
		if (r == "+" || r == "-" || r == "*" || r == "/") {
			post.calculation(r);
		}
		else {
			post.push(stof(r));
		}
	}
	post.show();//결과물 출력
}
